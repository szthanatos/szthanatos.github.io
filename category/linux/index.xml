<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux | Kryptonite Lab</title>
    <link>https://szthanatos.github.io/category/linux/</link>
      <atom:link href="https://szthanatos.github.io/category/linux/index.xml" rel="self" type="application/rss+xml" />
    <description>Linux</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh-Hans</language><lastBuildDate>Fri, 15 Nov 2019 17:18:05 +0800</lastBuildDate>
    <image>
      <url>https://szthanatos.github.io/images/icon_hu38c28d6ecf464f8a293472d2a570e5b8_6181_512x512_fill_lanczos_center_2.png</url>
      <title>Linux</title>
      <link>https://szthanatos.github.io/category/linux/</link>
    </image>
    
    <item>
      <title>加速 ssh 连接</title>
      <link>https://szthanatos.github.io/post/ssh_speed_up/</link>
      <pubDate>Fri, 15 Nov 2019 17:18:05 +0800</pubDate>
      <guid>https://szthanatos.github.io/post/ssh_speed_up/</guid>
      <description>&lt;h2 id=&#34;报错信息&#34;&gt;报错信息&lt;/h2&gt;
&lt;p&gt;之前运维给做了几台测试服务器，远程连接的时候速度特别慢，ssh 之后需要接近 1 分钟才能连上。&lt;/p&gt;
&lt;h2 id=&#34;原因&#34;&gt;原因&lt;/h2&gt;
&lt;p&gt;使用 &lt;code&gt;ssh -v &amp;lt;服务器&amp;gt;&lt;/code&gt; 显示连接过程：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ssh -v 123.456.789.0
OpenSSH_6.6.1, OpenSSL 1.0.1e-fips 11 Feb 2013
debug1: Reading configuration data /etc/ssh/ssh_config
debug1: /etc/ssh/ssh_config line 56: Applying options for *
debug1: Connecting to 123.456.789.0 [123.456.789.0] port 22.
debug1: Connection established.
debug1: permanently_set_uid: 0/0
debug1: identity file /root/.ssh/id_rsa type -1
debug1: identity file /root/.ssh/id_rsa-cert type -1
debug1: identity file /root/.ssh/id_dsa type -1
debug1: identity file /root/.ssh/id_dsa-cert type -1
debug1: identity file /root/.ssh/id_ecdsa type -1
debug1: identity file /root/.ssh/id_ecdsa-cert type -1
debug1: identity file /root/.ssh/id_ed25519 type -1
debug1: identity file /root/.ssh/id_ed25519-cert type -1
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_6.6.1
debug1: Remote protocol version 2.0, remote software version OpenSSH_6.6.1
debug1: match: OpenSSH_6.6.1 pat OpenSSH_6.6.1* compat 0x04000000
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug1: kex: server-&amp;gt;client aes128-ctr hmac-md5-etm@openssh.com none
debug1: kex: client-&amp;gt;server aes128-ctr hmac-md5-etm@openssh.com none
debug1: kex: curve25519-sha256@libssh.org need=16 dh_need=16
debug1: kex: curve25519-sha256@libssh.org need=16 dh_need=16
debug1: sending SSH2_MSG_KEX_ECDH_INIT
debug1: expecting SSH2_MSG_KEX_ECDH_REPLY
debug1: Server host key: ECDSA 3f:00:c1:54:09:7a:aa:50:93:a2:53:83:74:b5:07:8f
debug1: Host &#39;123.456.789.0&#39; is known and matches the ECDSA host key.
debug1: Found key in /root/.ssh/known_hosts:2
debug1: ssh_ecdsa_verify: signature correct
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug1: SSH2_MSG_NEWKEYS received
debug1: Roaming not allowed by server
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-mic,password
debug1: Next authentication method: gssapi-keyex # 0
debug1: No valid Key exchange context
debug1: Next authentication method: gssapi-with-mic # 1
debug1: Unspecified GSS failure.  Minor code may provide more information
No Kerberos credentials available

debug1: Unspecified GSS failure.  Minor code may provide more information
No Kerberos credentials available

debug1: Unspecified GSS failure.  Minor code may provide more information


debug1: Unspecified GSS failure.  Minor code may provide more information
No Kerberos credentials available

debug1: Next authentication method: publickey # 2
debug1: Trying private key: /root/.ssh/id_rsa
debug1: Trying private key: /root/.ssh/id_dsa
debug1: Trying private key: /root/.ssh/id_ecdsa
debug1: Trying private key: /root/.ssh/id_ed25519
debug1: Next authentication method: password # 3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;发现卡住的位置是 &lt;code&gt;debug1: Next authentication method: gssapi-with-mic&lt;/code&gt; 附近。&lt;/p&gt;
&lt;p&gt;证明是由于 &lt;code&gt;gssapi&lt;/code&gt; 认证带来的问题。&lt;/p&gt;
&lt;p&gt;从网上找到相关的解释：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;GSSAPI(Generic Security Services Application Programming Interface) 是一套通用网络安全系统接口。
该接口是对各种不同的客户端服务器安全机制的封装，以消除安全接口的不同，降低编程难度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OpenSSH 在用户登录的时候会验证 IP，它根据用户的 IP 使用反向 DNS 找到主机名，再使用 DNS 找到 IP 地址，最后匹配一下登录的 IP 是否合法。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;进行身份认证的时候，OpenSSH 虽然说的是 &lt;code&gt;publickey,gssapi-keyex,gssapi-with-mic,password&lt;/code&gt;，&lt;/p&gt;
&lt;p&gt;但默认顺序是：&lt;code&gt;gssapi-with-mic&lt;/code&gt; → &lt;code&gt;hostbased&lt;/code&gt; → &lt;code&gt;publickey&lt;/code&gt; → &lt;code&gt;keyboard-interactive&lt;/code&gt; → &lt;code&gt;password&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面连接过程我也标出了 0123，实际顺序的确如此。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gssapi&lt;/code&gt; 的认证是基于 &lt;code&gt;Kerberos&lt;/code&gt; 的，没见到人用过，&lt;/p&gt;
&lt;p&gt;另一方面，客户端反向 DNS 的过程也会在连接 DNS 服务器 / 查询客户端域名 (没域名可就会一层层 DNS 查上去) 上花费时间。&lt;/p&gt;
&lt;h2 id=&#34;解决办法&#34;&gt;解决办法&lt;/h2&gt;
&lt;p&gt;客户端，编辑 &lt;code&gt;/etc/ssh/ssh_config&lt;/code&gt; 文件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方式 1：将 &lt;code&gt;GSSAPIAuthentication&lt;/code&gt; 改为 no；&lt;/li&gt;
&lt;li&gt;方式 2：编辑 / 新增 &lt;code&gt;PreferredAuthentications&lt;/code&gt; 为 publickey 或者 password，改变认证优先度;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;服务端，编辑 &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; 文件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将 &lt;code&gt;UseDNS&lt;/code&gt; 改为 no；&lt;/li&gt;
&lt;li&gt;(可选) 将 &lt;code&gt;GSSAPIAuthentication&lt;/code&gt; 改为 no(所有连接都不做 gssapi 认证了)；&lt;/li&gt;
&lt;li&gt;重启 sshd 服务；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;实际效果，关闭 &lt;code&gt;GSSAPIAuthentication&lt;/code&gt; 让连接时间从 1 分钟下降到 8 秒左右，关闭 &lt;code&gt;UseDNS&lt;/code&gt; 后几乎接近秒连。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
