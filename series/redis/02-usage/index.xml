<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>操作 | Kryptonite Lab</title>
    <link>https://szthanatos.github.io/series/redis/02-usage/</link>
      <atom:link href="https://szthanatos.github.io/series/redis/02-usage/index.xml" rel="self" type="application/rss+xml" />
    <description>操作</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh-Hans</language><copyright>© 2021 szthanatos</copyright><lastBuildDate>Sun, 09 Sep 2018 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://szthanatos.github.io/media/icon_hu638af3a55c65206eddec4e3c4c13a753_187410_512x512_fill_lanczos_center_2.png</url>
      <title>操作</title>
      <link>https://szthanatos.github.io/series/redis/02-usage/</link>
    </image>
    
    <item>
      <title>Redis 集群相关命令</title>
      <link>https://szthanatos.github.io/series/redis/02-usage/cluster_command/</link>
      <pubDate>Thu, 30 Aug 2018 21:26:18 +0800</pubDate>
      <guid>https://szthanatos.github.io/series/redis/02-usage/cluster_command/</guid>
      <description>&lt;h2 id=&#34;集群信息&#34;&gt;集群信息&lt;/h2&gt;
&lt;h3 id=&#34;节点信息&#34;&gt;节点信息&lt;/h3&gt;
&lt;p&gt;集群节点相关信息可以通过 &lt;code&gt;cluster nodes&lt;/code&gt; 命令获取：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;127.0.0.1:6379&amp;gt; cluster nodes
5022fa41642195d74200fd512c08653dc12609e7 172.17.0.2:6380@16380 master - 0 1552814467000 2 connected 5461-10922
730d05ee4da3147d0885c6d47437465c94409f74 172.17.0.2:6383@16383 slave 25a2a1d8c96e9473d4cb3c8b0077d3b7b07dd5c0 0 1552814468555 5 connected
25a2a1d8c96e9473d4cb3c8b0077d3b7b07dd5c0 172.17.0.2:6379@16379 myself,master - 0 1552814468000 1 connected 0-5460
cf0be45c6a05c0d332b7356a7f57de95b32c3a71 172.17.0.2:6384@16384 slave 5022fa41642195d74200fd512c08653dc12609e7 0 1552814468654 6 connected
55d264b148ce35903928964ac017d682fc803eab 172.17.0.2:6381@16381 master - 0 1552814468000 3 connected 10923-16383
1a60baf4c2254b2e3a37cf6215d42b316ffdccc7 172.17.0.2:6382@16382 slave 55d264b148ce35903928964ac017d682fc803eab 0 1552814468000 4 connected
127.0.0.1:6379&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到，每一行即是一个节点的信息，以第一行为例，每个字段的含义分别是：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;502&amp;hellip;&amp;hellip;9e7&lt;/td&gt;
&lt;td&gt;node_id，节点标识&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;172.17.0.2:6380@16380&lt;/td&gt;
&lt;td&gt;IP 端口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;master&lt;/td&gt;
&lt;td&gt;身份，一般就是 &lt;code&gt;myself/master/slave&lt;/code&gt;，其他 &lt;code&gt;fail?/handshake/noaddr/noflags&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;对应主节点的 node_id(如果你是从节点的话，否则就是 &lt;code&gt;-&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0&lt;/code&gt; 表示没有待发送的 &lt;code&gt;ping&lt;/code&gt;，否则是要发送 &lt;code&gt;ping&lt;/code&gt; 的时间戳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1552814467000&lt;/td&gt;
&lt;td&gt;收到上一个 &lt;code&gt;pong&lt;/code&gt; 命令的时间戳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;权重&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;connected&lt;/td&gt;
&lt;td&gt;状态，&lt;code&gt;connected&lt;/code&gt;or&lt;code&gt;disconnected&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5461-10922&lt;/td&gt;
&lt;td&gt;哈希槽，连续的哈希槽用 &lt;code&gt;-&lt;/code&gt; 连接，离散的用 &lt;code&gt;,&lt;/code&gt; 隔开&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;状态信息&#34;&gt;状态信息&lt;/h3&gt;
&lt;p&gt;集群信息通过 &lt;code&gt;cluster info&lt;/code&gt; 获取：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;127.0.0.1:6379&amp;gt; cluster info
# 集群状态
cluster_state:ok
# 已分配的哈希槽数量，不是 16384 就有问题了
cluster_slots_assigned:16384
# 正确的哈希槽数量，如果有哈希槽分配到了离线的节点上就不是这个数字了
cluster_slots_ok:16384
# 临时错误哈希槽数，比如网络波动但节点还是正常的，那就是 pfail，节点确认离线了就是 fail
cluster_slots_pfail:0
cluster_slots_fail:0
# 集群节点数
cluster_known_nodes:6
# 集群规模
cluster_size:3
# 当前最大权重
cluster_current_epoch:6
# 本节点的权重
cluster_my_epoch:1
# 集群建立至今发送 / 接受的 ping/pong/meet 消息数
cluster_stats_messages_ping_sent:1554
cluster_stats_messages_pong_sent:1558
cluster_stats_messages_sent:3112
cluster_stats_messages_ping_received:1553
cluster_stats_messages_pong_received:1554
cluster_stats_messages_meet_received:5
cluster_stats_messages_received:3112
127.0.0.1:6379&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;集群操作&#34;&gt;集群操作&lt;/h2&gt;
&lt;p&gt;就不挨个详述了，写了个速查表如下，全部命令详见 &lt;a href=&#34;https://redis.io/commands&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;redis 官方文档&lt;/a&gt;。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;信息&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster info&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回集群基本信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster nodes&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回全部节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;控制&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster count-failure-reports &amp;lt;node_id&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回节点的错误报告数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster failover [FORCE/TAKEOVER]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;在从节点上执行，测试故障转移&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster set-config-epoch &amp;lt;config-epoch&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;为新节点设置权重&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster saveconfig&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将节点的配置文件保存到硬盘里面&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster reset [HARD/SOFT]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;重置没有 key 的当前节点 (所以应该先 flushall)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster readonly&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将从节点置为可读 (默认情况下，指向从节点的连接会被转向主节点)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster readwrite&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将从节点置为读写 (相当于还原为 &lt;code&gt;readonly&lt;/code&gt; 之前的状态)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;节点&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster meet &amp;lt;ip&amp;gt; &amp;lt;port&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将节点加入集群作为主节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster replicate &amp;lt;node_id&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将当前节点作为 &amp;lt; node_id &amp;gt; 的从节点加入集群&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster replicas &amp;lt;node_id&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;redis5.0 开始支持，列出指定主节点的从节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster slaves &amp;lt;node_id&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不再建议被使用，基本同 replicas&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster replicaof &amp;lt;ip&amp;gt; &amp;lt;port&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;redis5.0 开始支持，将当前节点置为指定节点的从节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster slaveof &amp;lt;ip&amp;gt; &amp;lt;port&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不再建议被使用，基本同 replicaof&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster forget &amp;lt;node_id&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;从集群中移除 &amp;lt; node_id &amp;gt; 节点（前提是没给他分配哈希槽 / 内容）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;哈希槽&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster addslots &amp;lt;slot&amp;gt;,...&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将一个或多个哈希槽添加到当前节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster delslots  &amp;lt;slot&amp;gt;,...&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;从当前节点移除哈希槽&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster flushslots&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;清空当前节点的哈希槽&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster setslot &amp;lt;slot&amp;gt; node &amp;lt;node_id&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将 &lt;strong&gt;未分配的&lt;/strong&gt; 哈希槽分配给指定节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster setslot &amp;lt;slot&amp;gt; migrating &amp;lt;node_id&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将本节点的哈希槽合并到指定节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster setslot &amp;lt;slot&amp;gt; importing &amp;lt;node_id&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;从指定节点引入哈希槽到本节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster setslot &amp;lt;slot&amp;gt; stable&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;取消哈希槽的移动，&lt;em&gt;主要是修复 &lt;code&gt;redis-trib fix&lt;/code&gt; 引发的问题←_←&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster flushslots&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;清空当前节点的哈希槽&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster flushslots&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;清空当前节点的哈希槽&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;键&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster keyslot &amp;lt;key&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;计算 key 应该被放在哪个槽&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster countkeysinslot &amp;lt;slot&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;返回哈希槽中 key 的数量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster getkeysinslot &amp;lt;slot&amp;gt; &amp;lt;count&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;从哈希槽中返回指定数量个 key&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;strong&gt;ps1&lt;/strong&gt;：从 redis5.0 起，&lt;code&gt;slave&lt;/code&gt; 关键字将被 &lt;code&gt;replicate&lt;/code&gt; 取代，相关命令也会逐步被替代
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;&lt;strong&gt;ps2&lt;/strong&gt;：&lt;code&gt;readonly&lt;/code&gt; 这个额外说一下，默认情况下，redis 的从节点不处理客户端请求，只负责同步主节点的数据，设置 &lt;code&gt;readonly&lt;/code&gt; 之后，指向从节点的读请求会被执行，这样相当于为主节点分担了读的压力 (也算是 scale 了)，但是还是存在两个限制：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;写请求还是会转移给主节点；&lt;/li&gt;
&lt;li&gt;要读的 key 的哈希槽不属于这个节点，请求一样会被转移；&lt;/li&gt;
&lt;/ol&gt;
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
